# Python üíñ R

## Lernsteuerung


### Lernziele


- Sie wissen, wo und wie Sie sich die Grundlagen von Python aneignen k√∂nnen.
- Sie k√∂nnen Python aus RStudio heraus verwenden.
- Sie k√∂nnen grundlegende Funktionen zur Verwaltung Ihrer Python-Installation wie das Hinzuf√ºgen von Modulen.


### Begleitliteratur


Es gibt viele Lehrb√ºcher zu Python. Mein Rat ist, das zu w√§hlen, das es in Ihrer Lieblingsbibliothek gibt. ü§ì Solange es einigerma√üen uptodate ist und Ihnen die didaktische Aufmachung zusagt.

Hier ist eine Auswahl an Einstiegsb√ºcher in deutscher Sprache: Bekannt ist z.B. @downey_think_2021; vergleichsweise aktuell ist @inden_python_2023; auch ganz nett ist @barry_python_2017.





## Python aus RStudio

RStudio bietet die M√∂glichkeit, R und Python gleichzeitig in einem Notebook zu verwenden. Und nicht nur das:

- Man kann Objekte (Daten) zwischen den beiden Sprachen tauschen
- Man kann aus R Python-Funktionen verwenden.

![Quelle: Imgflip](img/toogood.gif)



## Python-Setup


### Python installieren


Man kann Python kostenlos herunterladen bei https://www.python.org/downloads/. [Hier](https://de.wikihow.com/Python-installieren) ist eine Anleitung von Wikihow. Bei Unix-Betriebssystemen werden h√§ufig Paketmanager verwendet.


### Welche Python-Version l√§uft gerade?

In R l√§uft gerade folgende Python-Version:

```{r}
library(reticulate)
py_config()
```




Aus der `reticulate`-Doku: 

>    By default, reticulate uses an isolated python virtual environment named ‚Äúr-reticulate‚Äù.




Check: Ist Python gestartet und bereit?

```{r}
py_available()
```




Wir k√∂nnen die Kommandozeile auch aus Notebooks heraus ansprechen.



```{zsh}
#| echo: fenced
python --version
```


Aber Achtung: Die gezeigt Version ist nicht unbedingt diejenige, die im Notebook oder im interaktiven R verwendet wird.





RStudio zeigt Ihnen, welche Python-Versionen verf√ºgbar sind unter Tools > Global Options > Python.



### Versionen wechseln


#### RStudio

RStudio bietet in den Optionen per GUI die M√∂glichkeit, eine bestimmte Version von Python auszuw√§hlen. 
Zumeist sind mehrere Versionen auf einem Computer vorhanden.

Nat√ºrlich kann man auch via R virtuelle Environments nutzen, wie es in Python √ºblich ist:

```{r}
#| eval: false
use_virtualenv("r-tensorflow")
```


#### Pyenv

Mit `pyenv` kann man komfortabel zwischen mehreren installierten Python-Versionen wechseln.


Um Python-Module zu installieren via `pyenv` bietet sich dieser (Kommondozeilen-)Befehl an:

`pyenv exec pip install <name-des-moduls>`.

:::{#exm-spacy-pip}
Um das Modul `spacy` zu installieren, schreibt man `pyenv exec pip install spacy`. $\square$
:::




in der *Shell* ist gerade folgende Python-Version aktiviert:


:::{.panel-tabset}

### R

```{r}
system2(command = "pyenv",
        args = "version")
```

### Shell

```{zsh}
pyenv version
```

:::


::: calllout-caution
Die "aktuelle" Python-Version ist nicht (unbedingt) die Python-Version, die in R aktiv ist. $\square$
:::




```{zsh}
#| echo: fenced
pyenv versions
```

:::callout-caution
Es werden nur Python-Versionen angezeigt, die im Pfad (in der Shell) definiert sind. $\square$
:::







### Liste installierter Module

Die Liste installierter Module bezieht sich auf die aktuell aktivierte Version von Python.


:::{.panel-tabset}

### R

```{r}
py_list_packages()
```


### Shell

```{zsh}
pip list
```


### Python

```{python}
import os
os.system("pip list")
```


:::

### Module installieren


:::{.panel-tabset}

### Shell

Mit dem Kommandozeilen-Befehl `pip` kann man Pythonmodule installieren.


```{zsh}
#| eval: false
pip install module-name
```

Dabei steht `module-name` f√ºr den Namen des zu installierenden Moduls, z.B. `openai`.



### R




Oder via R:

```{r}
#| eval: false
py_install("openai")
```


:::



## Einstieg in Python


### Hallo, üêç

```{python}
#| echo: fenced
print("Hello! Here's üêç")

python_list = [1,2,3]
python_list
```


### Objektaustausch zwischen R und Python

In R ein Python-Objekt ansprechen, das geht mit `py$`:

```{r}
py$python_list

r_vec <- c(1,2,3)
r_vec
```


In Python ein R-Objekt ansprechen, das geht mit `r.`:


```{python}
r.r_vec
```


















## Vertiefung

Es gibt viele Onlinekurse, um Python zu lernen, z.B. [Googles Crashkurs bei Coursera](https://www.coursera.org/learn/python-crash-course); √ºberhaupt bietet Coursera eine Menge Onlinekurse zu dem [Thema Python](https://www.coursera.org/courses?query=python). 
Andere Anbieter bieten das auch, etwa [edx](https://www.edx.org/learn/python).
<https://www.learnpython.org/> bietet einen E-Learning-Kurs.

