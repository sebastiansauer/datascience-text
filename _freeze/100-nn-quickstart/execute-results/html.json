{
  "hash": "29d4766f03a6ce2319aaf78bf4a3c102",
  "result": {
    "markdown": "# Einstieg in Neuronale Netze\n\n\n## Quick-Start\n\n### Quick Start mit R\n\nWir halten uns an das Tutorial von [TensforFlow for R, \"Hello, World!\"](https://tensorflow.rstudio.com/tutorials/quickstart/beginner).\n\n\n#### Setup\n\nWir starten die benötigten Pakete:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-1_7c84e414bbed3b0df2f5d04b8e742733'}\n\n```{.r .cell-code}\nlibrary(keras)  # TensorFlow API\nlibrary(tensorflow)  # TensorFlow pur\nlibrary(tidyverse)  # Datenjudo\n## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.3     ✔ readr     2.1.4\n## ✔ forcats   1.0.0     ✔ stringr   1.5.0\n## ✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(tictoc)  # Zeitmessung\n```\n:::\n\n\nDas Installieren von TensorFlow bzw. Keras kann Schwierigkeiten bereiten.\nTipp: Stellen Sie in RStudio sicher, dass Sie die richtige Python-Version verwenden.\n\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-2_1c0d4f5caf83d9e42847aa51d4cbf008'}\n\n```{.r .cell-code}\nmnist <- dataset_mnist()\nX_train <- mnist$train$x\nX_test <- mnist$test$x\ny_train <- mnist$train$y\ny_test <- mnist$test$y\n```\n:::\n\n\nIn Kurzform kann man synonym schreiben:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-3_a0d11db01566046e252e5b59aae46675'}\n\n```{.r .cell-code}\nc(c(x_train, y_train), c(x_test, y_test)) %<-% keras::dataset_mnist()\n```\n:::\n\n\n\n#### Visualisieren\n\nWählen wir ein Bild aus; das schauen wir uns näher an [Quelle](https://stackoverflow.com/questions/43420754/plot-mnist-digits-with-ggplot2).\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-4_644ab5265ee58c48441c53c7e4a03a40'}\n\n```{.r .cell-code}\nimage_id <- 2\nmy_image <- mnist$train$x[image_id, 1:28, 1:28] %>%\n                as_tibble()\n## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n## `.name_repair` is omitted as of tibble 2.0.0.\n## ℹ Using compatibility `.name_repair`.\n\nmy_image\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"V1\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V2\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V3\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V4\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V5\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V6\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V7\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V8\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V9\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V10\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V11\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V12\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V13\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V14\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V15\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V16\"],\"name\":[16],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V17\"],\"name\":[17],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V18\"],\"name\":[18],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V19\"],\"name\":[19],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V20\"],\"name\":[20],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V21\"],\"name\":[21],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V22\"],\"name\":[22],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V23\"],\"name\":[23],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V24\"],\"name\":[24],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V25\"],\"name\":[25],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V26\"],\"name\":[26],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V27\"],\"name\":[27],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"V28\"],\"name\":[28],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"51\",\"17\":\"159\",\"18\":\"253\",\"19\":\"159\",\"20\":\"50\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"48\",\"16\":\"238\",\"17\":\"252\",\"18\":\"252\",\"19\":\"252\",\"20\":\"237\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"54\",\"15\":\"227\",\"16\":\"253\",\"17\":\"252\",\"18\":\"239\",\"19\":\"233\",\"20\":\"252\",\"21\":\"57\",\"22\":\"6\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"10\",\"13\":\"60\",\"14\":\"224\",\"15\":\"252\",\"16\":\"253\",\"17\":\"252\",\"18\":\"202\",\"19\":\"84\",\"20\":\"252\",\"21\":\"253\",\"22\":\"122\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"163\",\"13\":\"252\",\"14\":\"252\",\"15\":\"252\",\"16\":\"253\",\"17\":\"252\",\"18\":\"252\",\"19\":\"96\",\"20\":\"189\",\"21\":\"253\",\"22\":\"167\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"51\",\"12\":\"238\",\"13\":\"253\",\"14\":\"253\",\"15\":\"190\",\"16\":\"114\",\"17\":\"253\",\"18\":\"228\",\"19\":\"47\",\"20\":\"79\",\"21\":\"255\",\"22\":\"168\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"48\",\"11\":\"238\",\"12\":\"252\",\"13\":\"252\",\"14\":\"179\",\"15\":\"12\",\"16\":\"75\",\"17\":\"121\",\"18\":\"21\",\"19\":\"0\",\"20\":\"0\",\"21\":\"253\",\"22\":\"243\",\"23\":\"50\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"38\",\"10\":\"165\",\"11\":\"253\",\"12\":\"233\",\"13\":\"208\",\"14\":\"84\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"253\",\"22\":\"252\",\"23\":\"165\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"7\",\"9\":\"178\",\"10\":\"252\",\"11\":\"240\",\"12\":\"71\",\"13\":\"19\",\"14\":\"28\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"253\",\"22\":\"252\",\"23\":\"195\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"57\",\"9\":\"252\",\"10\":\"252\",\"11\":\"63\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"253\",\"22\":\"252\",\"23\":\"195\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"198\",\"9\":\"253\",\"10\":\"190\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"255\",\"22\":\"253\",\"23\":\"196\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"76\",\"8\":\"246\",\"9\":\"252\",\"10\":\"112\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"253\",\"22\":\"252\",\"23\":\"148\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"85\",\"8\":\"252\",\"9\":\"230\",\"10\":\"25\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"7\",\"20\":\"135\",\"21\":\"253\",\"22\":\"186\",\"23\":\"12\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"85\",\"8\":\"252\",\"9\":\"223\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"7\",\"19\":\"131\",\"20\":\"252\",\"21\":\"225\",\"22\":\"71\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"85\",\"8\":\"252\",\"9\":\"145\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"48\",\"18\":\"165\",\"19\":\"252\",\"20\":\"173\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"86\",\"8\":\"253\",\"9\":\"225\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"114\",\"17\":\"238\",\"18\":\"253\",\"19\":\"162\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"85\",\"8\":\"252\",\"9\":\"249\",\"10\":\"146\",\"11\":\"48\",\"12\":\"29\",\"13\":\"85\",\"14\":\"178\",\"15\":\"225\",\"16\":\"253\",\"17\":\"223\",\"18\":\"167\",\"19\":\"56\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"85\",\"8\":\"252\",\"9\":\"252\",\"10\":\"252\",\"11\":\"229\",\"12\":\"215\",\"13\":\"252\",\"14\":\"252\",\"15\":\"252\",\"16\":\"196\",\"17\":\"130\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"28\",\"8\":\"199\",\"9\":\"252\",\"10\":\"252\",\"11\":\"253\",\"12\":\"252\",\"13\":\"252\",\"14\":\"233\",\"15\":\"145\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"25\",\"9\":\"128\",\"10\":\"252\",\"11\":\"253\",\"12\":\"252\",\"13\":\"141\",\"14\":\"37\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"21\":\"0\",\"22\":\"0\",\"23\":\"0\",\"24\":\"0\",\"25\":\"0\",\"26\":\"0\",\"27\":\"0\",\"28\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-5_5ada0f202b0d45e5781ab637406ad115'}\n\n```{.r .cell-code}\nmy_image_prepared <- \n  my_image |> \n  rownames_to_column(var = 'y') %>% \n  pivot_longer(names_to = \"x\", values_to = \"val\", V1:V28) %>%\n  mutate(x = str_replace(x, 'V', '')) %>% \n  mutate(x = as.numeric(x),\n         y = as.numeric(y)) %>% \n  mutate(y = 28-y) \n\n\nhead(my_image_prepared)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"y\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"x\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"val\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"27\",\"2\":\"1\",\"3\":\"0\"},{\"1\":\"27\",\"2\":\"2\",\"3\":\"0\"},{\"1\":\"27\",\"2\":\"3\",\"3\":\"0\"},{\"1\":\"27\",\"2\":\"4\",\"3\":\"0\"},{\"1\":\"27\",\"2\":\"5\",\"3\":\"0\"},{\"1\":\"27\",\"2\":\"6\",\"3\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nSo, genug der Vorarbeiten, jetzt plotten:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-6_00f3189484d81adc5b69e6cbe878cb00'}\n\n```{.r .cell-code}\nmy_image_prepared %>%\n  ggplot(aes(x, y))+\n  geom_tile(aes(fill = val + 1))+\n  coord_fixed()+\n  theme_void()+\n  theme(legend.position=\"none\") +\n  scale_fill_viridis_c()\n```\n\n::: {.cell-output-display}\n![](100-nn-quickstart_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Neuronales Netz 1\n\n\n\n\nFür unser Netzwerk wollen wir Werte zwischen 0 und 1, daher teilen wir durch den Max-Wert, d.i. 255:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-7_bd61a482f37bd74365ef0aa157ba4c59'}\n\n```{.r .cell-code}\nx_train <- X_train / 255\nx_test <-  X_test / 255\n```\n:::\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-8_36d6db555394247c6ff0ca6c85e89131'}\n\n```{.r .cell-code}\nmodel <- keras_model_sequential(input_shape = c(28, 28)) %>%\n  layer_flatten() %>%\n  layer_dense(128, activation = \"relu\") %>%\n  layer_dropout(0.2) %>%\n  layer_dense(10)\n```\n:::\n\n\nHier ist eine Beschreibung des Modells:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-9_949e618a716a2ce99c82b07ddb6003b2'}\n\n```{.r .cell-code}\nmodel\n## Model: \"sequential\"\n## ________________________________________________________________________________\n##  Layer (type)                       Output Shape                    Param #     \n## ================================================================================\n##  flatten (Flatten)                  (None, 784)                     0           \n##  dense_1 (Dense)                    (None, 128)                     100480      \n##  dropout (Dropout)                  (None, 128)                     0           \n##  dense (Dense)                      (None, 10)                      1290        \n## ================================================================================\n## Total params: 101770 (397.54 KB)\n## Trainable params: 101770 (397.54 KB)\n## Non-trainable params: 0 (0.00 Byte)\n## ________________________________________________________________________________\n```\n:::\n\n\n\nDann definieren wir eine Fehlerfunktion:\n\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-10_7f35294f7ceca42a2ba451a2e5321941'}\n\n```{.r .cell-code}\nloss_fn <- loss_sparse_categorical_crossentropy(from_logits = TRUE)\n```\n:::\n\n\n\nBevor wir das Modul trainieren, konfigurieren wir es und kompilieren wir es in Maschinencode:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-11_f73dbccd288ceb70836e0ab8d02df480'}\n\n```{.r .cell-code}\nmodel %>% compile(\n  optimizer = \"adam\",\n  loss = loss_fn,\n  metrics = \"accuracy\"\n)\n```\n:::\n\n\n\n\nJetzt ist Trainingszeit, das besorgt die `fit`-Methode:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-12_699f9eecb56320a3900865045aca1773'}\n\n```{.r .cell-code}\ntic()\nmodel %>% fit(x_train, y_train, epochs = 5)\n## Epoch 1/5\n## 1875/1875 - 6s - loss: 0.2933 - accuracy: 0.9140 - 6s/epoch - 3ms/step\n## Epoch 2/5\n## 1875/1875 - 5s - loss: 0.1415 - accuracy: 0.9579 - 5s/epoch - 3ms/step\n## Epoch 3/5\n## 1875/1875 - 5s - loss: 0.1065 - accuracy: 0.9680 - 5s/epoch - 3ms/step\n## Epoch 4/5\n## 1875/1875 - 5s - loss: 0.0869 - accuracy: 0.9737 - 5s/epoch - 3ms/step\n## Epoch 5/5\n## 1875/1875 - 5s - loss: 0.0763 - accuracy: 0.9751 - 5s/epoch - 3ms/step\ntoc()\n## 27.897 sec elapsed\n```\n:::\n\n\n\nDie Modellgüte überprüfen wir natürlich im Test-Set:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-13_d40d231a05360926ecb19b5fbebccfb8'}\n\n```{.r .cell-code}\nmodel %>% evaluate(x_test,  y_test, verbose = 2)\n## 313/313 - 1s - loss: 0.0700 - accuracy: 0.9785 - 646ms/epoch - 2ms/step\n##       loss   accuracy \n## 0.06995549 0.97850001\n```\n:::\n\n\nNicht schlecht: Knapp 98% Trefferquote.\n\nUnd hier sind die Vorhersagen für die ersten zwei Bilder:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-14_ea9b9d0d9a062df9b7dd98bbd207ec82'}\n\n```{.r .cell-code}\npredictions <- predict(model, x_test[1:2, , ])\n## 1/1 - 0s - 92ms/epoch - 92ms/step\n\npredictions\n##           [,1]       [,2]      [,3]      [,4]      [,5]       [,6]       [,7]\n## [1,] -3.905925 -10.611533 -1.400373  4.933351 -16.82393 -8.1285248 -18.969732\n## [2,] -7.280436   5.272494 11.744059 -3.961411 -19.05402 -0.2386339  -2.736672\n##            [,8]      [,9]     [,10]\n## [1,]   9.691772 -4.551620  -1.77038\n## [2,] -20.078672 -0.959926 -14.45026\n```\n:::\n\n\nHm, das sind ja keine Wahrscheinlichkeiten? Stimmt! Es sind Logits.\nDaher müssen wir noch konvertieren:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-15_e1e41fc617abecca77cecbbc0a741bf1'}\n\n```{.r .cell-code}\ntf$nn$softmax(predictions)\n## tf.Tensor(\n## [[1.23274579e-06 1.50891550e-09 1.51015303e-05 8.50593665e-03\n##   3.02450936e-12 1.80726467e-08 3.53789682e-13 9.91466632e-01\n##   6.46325897e-07 1.04310670e-05]\n##  [5.45872712e-09 1.54439918e-03 9.98445655e-01 1.50843240e-07\n##   4.20620588e-14 6.24176197e-06 5.13361230e-07 1.50969060e-14\n##   3.03426854e-06 4.20024149e-12]], shape=(2, 10), dtype=float64)\n```\n:::\n\n\n\nOb ihr wirklich richtig steht, seht ihr, wenn das Licht angeht:\n\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-16_3a6902ad707e1114586a68828911e7f3'}\n\n```{.r .cell-code}\ny_test[1:2]\n## [1] 7 2\n```\n:::\n\n\n\nSieht gut aus!\n\n\n#### Best-Bet-Digit\n\n\nMöchte man ein Modell, das gleich die \"Best-Bet-Digit\" nennt, kann man das so machen:\n\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-17_fb575abd3979131c22b40a45867f4e9e'}\n\n```{.r .cell-code}\npredictions <- model %>%\n  predict(X_test[1:5, , ]) %>%  # nur die ersten 5\n  k_argmax()\n## 1/1 - 0s - 65ms/epoch - 65ms/step\n\npredictions$numpy()\n## [1] 7 2 1 0 4\n```\n:::\n\n\n\nOder ein eigenes, dazu passendes Modell bauen:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-18_2679e049151925c540196fc7566c2e82'}\n\n```{.r .cell-code}\nprobability_model <- \n  keras_model_sequential() %>%\n  model() %>%\n  layer_activation_softmax() %>%\n  layer_lambda(tf$argmax)\n```\n:::\n\n\n\nHier sind die Vorhersagen:\n\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-19_1e1fb101d7c93b2f83c84a30b499b3c5'}\n\n```{.r .cell-code}\nprobability_model(x_test[1:5, , ])\n## tf.Tensor([3 2 1 0 4 2 2 0 2 4], shape=(10), dtype=int64)\n```\n:::\n\n::: {.cell hash='100-nn-quickstart_cache/html/unnamed-chunk-20_033f9bac725e3eb68e0d6e8fea31aaa3'}\n\n```{.r .cell-code}\ny_test[1:5]\n## [1] 7 2 1 0 4\n```\n:::\n\n\n\n\n<!-- #### Modellgüte  -->\n\n<!-- Die Modellgüte wird von `evaluate` ausgegeben. -->\n<!-- Aber wir könne -->\n\n\n\n\n### Quick-Start mit Python und Colab\n\nAm einfachsten ist der Einstieg mit [Google Colab](https://colab.research.google.com/), wo Python voreingestellt ist.\nBeginnen Sie mit dem [MNIST-Tutorial](https://www.tensorflow.org/tutorials/quickstart/beginner.\n\n\n\n\n## Vertiefung\n\nDie [TensforFlow-Docs](https://www.tensorflow.org/guide/keras) bieten einen guten Einstieg in Keras und TensorFlow.\n\n\n\n## Fallstudien\n\n\n- [MNIST einen Schritt weiter](https://appsilon.com/r-keras-mnist/) \n- [Fashion-MNIST](https://www.tensorflow.org/tutorials/keras/classification)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}